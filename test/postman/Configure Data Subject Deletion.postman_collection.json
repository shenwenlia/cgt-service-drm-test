{
	"info": {
		"_postman_id": "089c6cbb-2953-470b-957a-588f5b680faa",
		"name": "Configure Data Subject Deletion [Local]",
		"description": "APIs that need to be implemented by the applications to allow Data Retention Manager (DRM) to orchestrate data subject blocking/deletion. These endpoints would be invoked when data subject deletion call is trigered from DRM by the customer or by the application in the customer's context. The data will be processed based on the residence and retention rules that are configured by the customer for a given data subject role of the application.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Endpoint to fetch data subjects which have reached end of purpose.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"5 Contacts have reached endofResidence\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.successResult.success.length).to.eq(6);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"startTime\": \"modifiedAt\",\n  \"legalGround\": \"{{legalGround}}\",\n  \"legalEntitiesResidenceRules\": [\n    {\n      \"legalEntity\": \"{{legalEntity}}\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"2022-05-05T00:00:00\",\n          \"conditionSet\": []\n        }\n      ]\n    }\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/endofResidenceDS",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"endofResidenceDS"
					]
				},
				"description": "This api should be implemented by the application to return the list of data subjects associated with a given transactional data and data subject role for which the end of purpose has been reached. \nThis endpoint is invoked by DRM when recheck is triggered - to check for data subjects of a particular application group that are eligible for deletion.\nThe residenceDate passed in the payload is calculated based on the residence rules that is configured for the transactional data for a given -\ndataSubjectRole and legalEntity of the application group.\nIf the residenceDate passed is on or before the current date then the data subject has completed the end of purpose with respect to the given transactional data.\n**Note**- \n\n* this endpoint should be provided in the service instance configuration under:\nretention-configs => dataSubjects=> legalGrounds => dataSubjectsEndofResidence\n\n**You can use configure environment feature of API Hub to try out the operations if they have been implemented with the given resource path.**"
			},
			"response": [
				{
					"name": "Data subjects which has fullfilled residence constraint or not fullfilled based on residence rules",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"voluptate velit\",\n  \"dataSubjectRole\": \"consequat Excepteur nulla sit veniam\",\n  \"startTime\": \"do elit sed enim\",\n  \"legalEntitiesResidenceRules\": [\n    {\n      \"legalEntity\": \"dolo\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"amet\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"velit ipsum consequat\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"mollit esse ut amet\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"quis Duis ut Lorem\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"irure quis\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/endofResidenceDS",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"endofResidenceDS"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": [\n    {\n      \"dataSubjectID\": \"nulla\"\n    },\n    {\n      \"dataSubjectID\": \"commodo id\"\n    }\n  ],\n  \"nonConfirmCondition\": [\n    {\n      \"dataSubjectID\": \"nisi est non in\"\n    },\n    {\n      \"dataSubjectID\": \"ut\"\n    }\n  ]\n}"
				},
				{
					"name": "Bad request.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"voluptate velit\",\n  \"dataSubjectRole\": \"consequat Excepteur nulla sit veniam\",\n  \"startTime\": \"do elit sed enim\",\n  \"legalEntitiesResidenceRules\": [\n    {\n      \"legalEntity\": \"dolo\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"amet\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"velit ipsum consequat\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"mollit esse ut amet\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"quis Duis ut Lorem\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"irure quis\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/endofResidenceDS",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"endofResidenceDS"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"voluptate velit\",\n  \"dataSubjectRole\": \"consequat Excepteur nulla sit veniam\",\n  \"startTime\": \"do elit sed enim\",\n  \"legalEntitiesResidenceRules\": [\n    {\n      \"legalEntity\": \"dolo\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"amet\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"velit ipsum consequat\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"mollit esse ut amet\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"quis Duis ut Lorem\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"irure quis\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/endofResidenceDS",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"endofResidenceDS"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Insufficient scope",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"voluptate velit\",\n  \"dataSubjectRole\": \"consequat Excepteur nulla sit veniam\",\n  \"startTime\": \"do elit sed enim\",\n  \"legalEntitiesResidenceRules\": [\n    {\n      \"legalEntity\": \"dolo\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"amet\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"velit ipsum consequat\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"mollit esse ut amet\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"quis Duis ut Lorem\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"irure quis\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/endofResidenceDS",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"endofResidenceDS"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Endpoint not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"voluptate velit\",\n  \"dataSubjectRole\": \"consequat Excepteur nulla sit veniam\",\n  \"startTime\": \"do elit sed enim\",\n  \"legalEntitiesResidenceRules\": [\n    {\n      \"legalEntity\": \"dolo\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"amet\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"velit ipsum consequat\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"mollit esse ut amet\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"quis Duis ut Lorem\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"irure quis\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/endofResidenceDS",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"endofResidenceDS"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"voluptate velit\",\n  \"dataSubjectRole\": \"consequat Excepteur nulla sit veniam\",\n  \"startTime\": \"do elit sed enim\",\n  \"legalEntitiesResidenceRules\": [\n    {\n      \"legalEntity\": \"dolo\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"amet\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"velit ipsum consequat\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"mollit esse ut amet\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"quis Duis ut Lorem\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"irure quis\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/endofResidenceDS",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"endofResidenceDS"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Service not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"voluptate velit\",\n  \"dataSubjectRole\": \"consequat Excepteur nulla sit veniam\",\n  \"startTime\": \"do elit sed enim\",\n  \"legalEntitiesResidenceRules\": [\n    {\n      \"legalEntity\": \"dolo\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"amet\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"velit ipsum consequat\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"mollit esse ut amet\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"quis Duis ut Lorem\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"irure quis\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/endofResidenceDS",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"endofResidenceDS"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Endpoint to check if data subjects have reached the end of purpose when more than one transactional data is configured for the application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"endofResidenceDSConfirmation = []\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"[]\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"legalGround\": \"mollit\",\n  \"dataSubjectRole\": {},\n  \"startTime\": \"enim ipsum Lorem tempor\",\n  \"legalEntitiesResidenceRules\": [\n    {\n      \"legalEntity\": \"velit labore enim nulla\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"Duis pariatur\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"Excepteur dolor\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"culpa ex\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"ad esse enim in\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"commodo Lorem ipsum laboris\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"dataSubjects\": [\n    {\n      \"dataSubjectID\": \"tempor officia in\"\n    },\n    {\n      \"dataSubjectID\": \"officia aliquip sit nostrud ut\"\n    }\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/endofResidenceDSConfirmation",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"endofResidenceDSConfirmation"
					]
				},
				"description": "This endpoint has to be implemented by the application only if there is more than one transactional data configured for the application.\nWhen recheck is triggered to check for deletable data subjects of a give application, DRM will first invoke the dataSubjectsEndofResidence endpoint following which this endpoint would be called, in case more than one transactional data is configured.\nThe next transactional data of the application and the list of data subjects that have reached the end of residence - initially returned by the dataSubjectEndofResidence endpoint, along with the residence rules for the current transactional data would be passed in the payload for the first call.\nThis endpoint would be consecutively called for all the remaining transactional data of the application group passing the list of data subjects that were returned in the previous call along with it's residence rules to the payload.\nIf for the data subjects passed in the payload the residence period is complete then, return only these data subject ids in the response.\n**Note** -\n\n* This endpoint has to be provided in the serivce instance configuration under-\nretention-configs => dataSubjects => legalGrounds =>dataSubjectsEndofResidenceConfirmation\n\n**You can use configure environment feature of API Hub to try out the operations if they have been implemented with the given resource path.**"
			},
			"response": [
				{
					"name": "List of data subjects eligible for deletion",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"veniam\",\n  \"dataSubjectRole\": {},\n  \"startTime\": \"ut magna id aliqua nostrud\",\n  \"legalEntitiesResidenceRules\": [\n    {\n      \"legalEntity\": \"quis laborum consectetur\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"irure in sit anim\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"sint ut ipsum aliquip nulla\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"consequat aliqua\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"elit adip\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"Ut fugiat officia in\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"dataSubjects\": [\n    {\n      \"dataSubjectID\": \"adipisicing Duis laborum\"\n    },\n    {\n      \"dataSubjectID\": \"enim magna veniam\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/endofResidenceDSConfirmation",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"endofResidenceDSConfirmation"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"dataSubjectID\": \"amet est aliqua nisi\"\n  },\n  {\n    \"dataSubjectID\": \"dolore velit ullamco aliqua\"\n  }\n]"
				},
				{
					"name": "Bad request.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"veniam\",\n  \"dataSubjectRole\": {},\n  \"startTime\": \"ut magna id aliqua nostrud\",\n  \"legalEntitiesResidenceRules\": [\n    {\n      \"legalEntity\": \"quis laborum consectetur\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"irure in sit anim\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"sint ut ipsum aliquip nulla\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"consequat aliqua\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"elit adip\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"Ut fugiat officia in\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"dataSubjects\": [\n    {\n      \"dataSubjectID\": \"adipisicing Duis laborum\"\n    },\n    {\n      \"dataSubjectID\": \"enim magna veniam\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/endofResidenceDSConfirmation",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"endofResidenceDSConfirmation"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"veniam\",\n  \"dataSubjectRole\": {},\n  \"startTime\": \"ut magna id aliqua nostrud\",\n  \"legalEntitiesResidenceRules\": [\n    {\n      \"legalEntity\": \"quis laborum consectetur\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"irure in sit anim\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"sint ut ipsum aliquip nulla\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"consequat aliqua\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"elit adip\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"Ut fugiat officia in\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"dataSubjects\": [\n    {\n      \"dataSubjectID\": \"adipisicing Duis laborum\"\n    },\n    {\n      \"dataSubjectID\": \"enim magna veniam\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/endofResidenceDSConfirmation",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"endofResidenceDSConfirmation"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Insufficient scope",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"veniam\",\n  \"dataSubjectRole\": {},\n  \"startTime\": \"ut magna id aliqua nostrud\",\n  \"legalEntitiesResidenceRules\": [\n    {\n      \"legalEntity\": \"quis laborum consectetur\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"irure in sit anim\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"sint ut ipsum aliquip nulla\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"consequat aliqua\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"elit adip\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"Ut fugiat officia in\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"dataSubjects\": [\n    {\n      \"dataSubjectID\": \"adipisicing Duis laborum\"\n    },\n    {\n      \"dataSubjectID\": \"enim magna veniam\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/endofResidenceDSConfirmation",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"endofResidenceDSConfirmation"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Endpoint not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"veniam\",\n  \"dataSubjectRole\": {},\n  \"startTime\": \"ut magna id aliqua nostrud\",\n  \"legalEntitiesResidenceRules\": [\n    {\n      \"legalEntity\": \"quis laborum consectetur\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"irure in sit anim\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"sint ut ipsum aliquip nulla\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"consequat aliqua\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"elit adip\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"Ut fugiat officia in\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"dataSubjects\": [\n    {\n      \"dataSubjectID\": \"adipisicing Duis laborum\"\n    },\n    {\n      \"dataSubjectID\": \"enim magna veniam\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/endofResidenceDSConfirmation",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"endofResidenceDSConfirmation"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"veniam\",\n  \"dataSubjectRole\": {},\n  \"startTime\": \"ut magna id aliqua nostrud\",\n  \"legalEntitiesResidenceRules\": [\n    {\n      \"legalEntity\": \"quis laborum consectetur\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"irure in sit anim\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"sint ut ipsum aliquip nulla\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"consequat aliqua\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"elit adip\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"Ut fugiat officia in\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"dataSubjects\": [\n    {\n      \"dataSubjectID\": \"adipisicing Duis laborum\"\n    },\n    {\n      \"dataSubjectID\": \"enim magna veniam\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/endofResidenceDSConfirmation",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"endofResidenceDSConfirmation"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Service not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"veniam\",\n  \"dataSubjectRole\": {},\n  \"startTime\": \"ut magna id aliqua nostrud\",\n  \"legalEntitiesResidenceRules\": [\n    {\n      \"legalEntity\": \"quis laborum consectetur\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"irure in sit anim\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"sint ut ipsum aliquip nulla\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"consequat aliqua\",\n      \"residenceRules\": [\n        {\n          \"residenceDate\": \"elit adip\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"residenceDate\": \"Ut fugiat officia in\",\n          \"conditionSet\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"dataSubjects\": [\n    {\n      \"dataSubjectID\": \"adipisicing Duis laborum\"\n    },\n    {\n      \"dataSubjectID\": \"enim magna veniam\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/endofResidenceDSConfirmation",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"endofResidenceDSConfirmation"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Endpoint to fetch data subject information like the first name, last name and email id.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"dataSubjectId is returned\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].dataSubjectId).to.eql(\"ElonMusk\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"applicationGroupName\": \"CGT_TMP\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"dataSubjectIds\": [\n    \"{{contactId}}\",\n    \"JeckMa\"\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/dataSubjectInformation?search=quis magna ipsum",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"dataSubjectInformation"
					],
					"query": [
						{
							"key": "search",
							"value": "quis magna ipsum",
							"description": "When the data subject id, name or email can be passed here The information corressponding to that data subject will be returned in the response.\nWhen a value is passed for this query do not include the 'dataSubjectIds' field in the payload\n**Note**-\nThis option is applicable only for those applications that have set the value of \"dataSubjectInformationFilterEnabled\" property as true in the service instance configuration."
						}
					]
				},
				"description": "This endpoint will have to be implemented by the application only if they want to display additional information like full name and email id of the data subject.\nDRM calls this endpoint to fetch the details that will be displayed in the Delete Data Subject Information (DDS) UI.\nThis endpoint will have to return the details of all the data subjects whose ids are passed in the payload.\n**Note**- \n\n* this endpoint will have to be provided in the service instance configuration under-\nretention-configs => dataSubjects => dataSubjectInformationEndPoint\n\n**You can use configure environment feature of API Hub to try out the operations if they have been implemented with the given resource path.**"
			},
			"response": [
				{
					"name": "Data Subject information retrieved successfully. In case the dataSubjectId is not found do not include it in the response.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"CGT_TMP\",\n  \"dataSubjectRole\": \"Contact\",\n  \"dataSubjectIds\": [\n    \"{{contactId}}\",\n    \"Test2_DS_13\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/dataSubjectInformation?search=quis magna ipsum",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectInformation"
							],
							"query": [
								{
									"key": "search",
									"value": "quis magna ipsum"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{}"
				},
				{
					"name": "Bad request.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"dataSubjectIds\": [\n    \"{{contactId}}\",\n    \"Test2_DS_13\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/dataSubjectInformation?search=quis magna ipsum",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectInformation"
							],
							"query": [
								{
									"key": "search",
									"value": "quis magna ipsum"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"dataSubjectIds\": [\n    \"{{contactId}}\",\n    \"Test2_DS_13\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/dataSubjectInformation?search=quis magna ipsum",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectInformation"
							],
							"query": [
								{
									"key": "search",
									"value": "quis magna ipsum"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Insufficient scope",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"dataSubjectIds\": [\n    \"{{contactId}}\",\n    \"Test2_DS_13\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/dataSubjectInformation?search=quis magna ipsum",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectInformation"
							],
							"query": [
								{
									"key": "search",
									"value": "quis magna ipsum"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Endpoint not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"dataSubjectIds\": [\n    \"{{contactId}}\",\n    \"Test2_DS_13\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/dataSubjectInformation?search=quis magna ipsum",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectInformation"
							],
							"query": [
								{
									"key": "search",
									"value": "quis magna ipsum"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"dataSubjectIds\": [\n    \"{{contactId}}\",\n    \"Test2_DS_13\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/dataSubjectInformation?search=quis magna ipsum",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectInformation"
							],
							"query": [
								{
									"key": "search",
									"value": "quis magna ipsum"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Service not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"dataSubjectIds\": [\n    \"{{contactId}}\",\n    \"Test2_DS_13\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/dataSubjectInformation?search=quis magna ipsum",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectInformation"
							],
							"query": [
								{
									"key": "search",
									"value": "quis magna ipsum"
								}
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Endpoint to check if business is completed for a data subject associated with the given data subject role",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"dataSubjectEndOfBusiness expired = true\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.dataSubjectExpired).to.eql(true);\r",
							"});\r",
							"pm.test(\"dataSubjectEndOfBusiness NotExpiredReason = \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.dataSubjectNotExpiredReason).to.eql(\"\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "1234",
							"type": "string"
						},
						{
							"key": "username",
							"value": "Admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"legalGround\": \"{{legalGround}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"dataSubjectID\": \"{{contactId}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/dataSubjectEndOfBusiness",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"dataSubjectEndOfBusiness"
					]
				},
				"description": "The endpoint has to be implemented by the application to confirm if a given data subject has reached it's end of business or not.\nWhen deletion of the data subject is triggered from DRM this is the first endpoint that would be invoked.\nAPI checks if the data subject has reached it's end of business for the given transactional data and data subject role passed in the payload,\nIf the end of business is reached then the value of dataSubjectExpired field in the response will be true if not the value will be false.\n**Note**- \n\n* This endpoint has to be provided in the service instance configuration under-\nretention-configs => dataSubjects => legalGrounds => dataSubjectEndofBusinessEndPoint\n\n**You can use configure environment feature of API Hub to try out the operations if they have been implemented with the given resource path.**"
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/dataSubjectEndOfBusiness",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectEndOfBusiness"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"dataSubjectExpired\": true,\n  \"dataSubjectNotExpiredReason\": \"\"\n}"
				},
				{
					"name": "If transactional data instance is not found then respond with 204.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/dataSubjectEndOfBusiness",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectEndOfBusiness"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad request.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/dataSubjectEndOfBusiness",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectEndOfBusiness"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/dataSubjectEndOfBusiness",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectEndOfBusiness"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Insufficient scope",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/dataSubjectEndOfBusiness",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectEndOfBusiness"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Endpoint not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/dataSubjectEndOfBusiness",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectEndOfBusiness"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/dataSubjectEndOfBusiness",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectEndOfBusiness"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Service not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/dataSubjectEndOfBusiness",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectEndOfBusiness"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Endpoint to return list of legal entities associated with a data subject",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"dataSubjectLegalEntities = LE\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].legalEntity).to.eql(\"LE\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "1234",
							"type": "string"
						},
						{
							"key": "username",
							"value": "Admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"legalGround\": \"ContactInMasterdataManagement\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"dataSubjectID\": \"1001\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "es",
					"host": [
						"es"
					]
				},
				"description": "This endpoint has to be implemented by the application to return the list of legal entities associated with the data subject for a given \"data subject role and transactional data\"\nWhen deletion of the data subject is triggered from DRM this endpoint would be called to check the list of legal entities it is associated with.\n**Note**- \n\n* this endpoint has to be provided in the service instance configuration under-\nretention-configs => dataSubjects => legalGrounds => dataSubjectLegalEntitiesEndPoint\n\n**You can use configure environment feature of API Hub to try out the operations if they have been implemented with the given resource path.**"
			},
			"response": [
				{
					"name": "Legal entities retrived successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/dataSubjectLegalEntities",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectLegalEntities"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"legalEntity\": \"LE\"\n  },\n  {\n    \"legalEntity\": \"LE\"\n  }\n]"
				},
				{
					"name": "When transactional data instances are not found return 204.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/dataSubjectLegalEntities",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectLegalEntities"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad request.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/dataSubjectLegalEntities",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectLegalEntities"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/dataSubjectLegalEntities",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectLegalEntities"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Insufficient scope",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/dataSubjectLegalEntities",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectLegalEntities"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Endpoint not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/dataSubjectLegalEntities",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectLegalEntities"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/dataSubjectLegalEntities",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectLegalEntities"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Service not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/dataSubjectLegalEntities",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"dataSubjectLegalEntities"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Endpoint returns the last retention start date for the calculation of the blocking and deletion periods of the data subject",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"retentionStartDate is the ModifiedAt\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].retentionStartDate).to.eql(\"2022-05-04T12:40:25\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"legalEntity\": \"LE\",\n  \"startTime\": \"modifiedAt\",\n  \"dataSubjectID\": \"{{contactId}}\",\n  \"legalGround\": \"ContactMasterData\",\n  \"rulesConditionSet\": [\n    {\n      \"retentionID\": \"1603026602019\",\n      \"conditionSet\": []\n    },\n    {\n      \"retentionID\": \"1603026602179\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"TSApp13_DSR1_LG1_CF1\",\n          \"conditionFieldValue\": \"TSApp13_DSR1_LG1_CFV1\"\n        }\n      ]\n    }\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/retentionStartDate",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"retentionStartDate"
					]
				},
				"description": "This endpoint should be implemented by the application to return the greatest end of business date.\nWhen the data subject deletion is triggered this endpoint will be called by DRM to retrieve the maximum retention start date.\nFor the transactional data associated with a given data subject role the end of business dates would be computed across all the legal entities with which the data subject is associated, based on the business rules that have been configured for it.\nOut of all the calculated dates the maximum end of business date would be returned.\n**Note** - \n* This endpoint has to be provided in the service instance configuration under-\nretention-configs => dataSubjects => legalGrounds => dataSubjectLastRetentionStartDatesEndPoint\n\n**You can use configure environment feature of API Hub to try out the operations if they have been implemented with the given resource path.**"
			},
			"response": [
				{
					"name": "Start of retention date retrieve successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"elit nisi ipsum sed\",\n  \"dataSubjectRole\": \"tempor consectetur amet enim\",\n  \"dataSubjectID\": \"mollit\",\n  \"legalEntity\": \"magna consequat minim ad\",\n  \"startTime\": \"sint enim ad aliqua sed\",\n  \"rulesConditionSet\": [\n    {\n      \"retentionID\": \"veniam Duis cillum\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"consectetur et do est\",\n          \"conditionFieldValue\": \"laborum dolore\"\n        },\n        {\n          \"conditionFieldName\": \"nisi cupidatat Except\",\n          \"conditionFieldValue\": \"Duis pariatur\"\n        }\n      ]\n    },\n    {\n      \"retentionID\": \"mollit elit fugiat eiusmod\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"dolor qui adipisicing laborum\",\n          \"conditionFieldValue\": \"non sed consectetur\"\n        },\n        {\n          \"conditionFieldName\": \"mollit\",\n          \"conditionFieldValue\": \"incididunt qui\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/retentionStartDate",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"retentionStartDate"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{}"
				},
				{
					"name": "If no transacrional data instances are found, respond with 204.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"elit nisi ipsum sed\",\n  \"dataSubjectRole\": \"tempor consectetur amet enim\",\n  \"dataSubjectID\": \"mollit\",\n  \"legalEntity\": \"magna consequat minim ad\",\n  \"startTime\": \"sint enim ad aliqua sed\",\n  \"rulesConditionSet\": [\n    {\n      \"retentionID\": \"veniam Duis cillum\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"consectetur et do est\",\n          \"conditionFieldValue\": \"laborum dolore\"\n        },\n        {\n          \"conditionFieldName\": \"nisi cupidatat Except\",\n          \"conditionFieldValue\": \"Duis pariatur\"\n        }\n      ]\n    },\n    {\n      \"retentionID\": \"mollit elit fugiat eiusmod\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"dolor qui adipisicing laborum\",\n          \"conditionFieldValue\": \"non sed consectetur\"\n        },\n        {\n          \"conditionFieldName\": \"mollit\",\n          \"conditionFieldValue\": \"incididunt qui\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/retentionStartDate",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"retentionStartDate"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad request for missing conditional field in rule or etc.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"elit nisi ipsum sed\",\n  \"dataSubjectRole\": \"tempor consectetur amet enim\",\n  \"dataSubjectID\": \"mollit\",\n  \"legalEntity\": \"magna consequat minim ad\",\n  \"startTime\": \"sint enim ad aliqua sed\",\n  \"rulesConditionSet\": [\n    {\n      \"retentionID\": \"veniam Duis cillum\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"consectetur et do est\",\n          \"conditionFieldValue\": \"laborum dolore\"\n        },\n        {\n          \"conditionFieldName\": \"nisi cupidatat Except\",\n          \"conditionFieldValue\": \"Duis pariatur\"\n        }\n      ]\n    },\n    {\n      \"retentionID\": \"mollit elit fugiat eiusmod\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"dolor qui adipisicing laborum\",\n          \"conditionFieldValue\": \"non sed consectetur\"\n        },\n        {\n          \"conditionFieldName\": \"mollit\",\n          \"conditionFieldValue\": \"incididunt qui\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/retentionStartDate",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"retentionStartDate"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"elit nisi ipsum sed\",\n  \"dataSubjectRole\": \"tempor consectetur amet enim\",\n  \"dataSubjectID\": \"mollit\",\n  \"legalEntity\": \"magna consequat minim ad\",\n  \"startTime\": \"sint enim ad aliqua sed\",\n  \"rulesConditionSet\": [\n    {\n      \"retentionID\": \"veniam Duis cillum\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"consectetur et do est\",\n          \"conditionFieldValue\": \"laborum dolore\"\n        },\n        {\n          \"conditionFieldName\": \"nisi cupidatat Except\",\n          \"conditionFieldValue\": \"Duis pariatur\"\n        }\n      ]\n    },\n    {\n      \"retentionID\": \"mollit elit fugiat eiusmod\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"dolor qui adipisicing laborum\",\n          \"conditionFieldValue\": \"non sed consectetur\"\n        },\n        {\n          \"conditionFieldName\": \"mollit\",\n          \"conditionFieldValue\": \"incididunt qui\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/retentionStartDate",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"retentionStartDate"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Insufficient scope",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"elit nisi ipsum sed\",\n  \"dataSubjectRole\": \"tempor consectetur amet enim\",\n  \"dataSubjectID\": \"mollit\",\n  \"legalEntity\": \"magna consequat minim ad\",\n  \"startTime\": \"sint enim ad aliqua sed\",\n  \"rulesConditionSet\": [\n    {\n      \"retentionID\": \"veniam Duis cillum\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"consectetur et do est\",\n          \"conditionFieldValue\": \"laborum dolore\"\n        },\n        {\n          \"conditionFieldName\": \"nisi cupidatat Except\",\n          \"conditionFieldValue\": \"Duis pariatur\"\n        }\n      ]\n    },\n    {\n      \"retentionID\": \"mollit elit fugiat eiusmod\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"dolor qui adipisicing laborum\",\n          \"conditionFieldValue\": \"non sed consectetur\"\n        },\n        {\n          \"conditionFieldName\": \"mollit\",\n          \"conditionFieldValue\": \"incididunt qui\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/retentionStartDate",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"retentionStartDate"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Endpoint not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"elit nisi ipsum sed\",\n  \"dataSubjectRole\": \"tempor consectetur amet enim\",\n  \"dataSubjectID\": \"mollit\",\n  \"legalEntity\": \"magna consequat minim ad\",\n  \"startTime\": \"sint enim ad aliqua sed\",\n  \"rulesConditionSet\": [\n    {\n      \"retentionID\": \"veniam Duis cillum\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"consectetur et do est\",\n          \"conditionFieldValue\": \"laborum dolore\"\n        },\n        {\n          \"conditionFieldName\": \"nisi cupidatat Except\",\n          \"conditionFieldValue\": \"Duis pariatur\"\n        }\n      ]\n    },\n    {\n      \"retentionID\": \"mollit elit fugiat eiusmod\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"dolor qui adipisicing laborum\",\n          \"conditionFieldValue\": \"non sed consectetur\"\n        },\n        {\n          \"conditionFieldName\": \"mollit\",\n          \"conditionFieldValue\": \"incididunt qui\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/retentionStartDate",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"retentionStartDate"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"elit nisi ipsum sed\",\n  \"dataSubjectRole\": \"tempor consectetur amet enim\",\n  \"dataSubjectID\": \"mollit\",\n  \"legalEntity\": \"magna consequat minim ad\",\n  \"startTime\": \"sint enim ad aliqua sed\",\n  \"rulesConditionSet\": [\n    {\n      \"retentionID\": \"veniam Duis cillum\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"consectetur et do est\",\n          \"conditionFieldValue\": \"laborum dolore\"\n        },\n        {\n          \"conditionFieldName\": \"nisi cupidatat Except\",\n          \"conditionFieldValue\": \"Duis pariatur\"\n        }\n      ]\n    },\n    {\n      \"retentionID\": \"mollit elit fugiat eiusmod\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"dolor qui adipisicing laborum\",\n          \"conditionFieldValue\": \"non sed consectetur\"\n        },\n        {\n          \"conditionFieldName\": \"mollit\",\n          \"conditionFieldValue\": \"incididunt qui\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/retentionStartDate",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"retentionStartDate"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Service not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"elit nisi ipsum sed\",\n  \"dataSubjectRole\": \"tempor consectetur amet enim\",\n  \"dataSubjectID\": \"mollit\",\n  \"legalEntity\": \"magna consequat minim ad\",\n  \"startTime\": \"sint enim ad aliqua sed\",\n  \"rulesConditionSet\": [\n    {\n      \"retentionID\": \"veniam Duis cillum\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"consectetur et do est\",\n          \"conditionFieldValue\": \"laborum dolore\"\n        },\n        {\n          \"conditionFieldName\": \"nisi cupidatat Except\",\n          \"conditionFieldValue\": \"Duis pariatur\"\n        }\n      ]\n    },\n    {\n      \"retentionID\": \"mollit elit fugiat eiusmod\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"dolor qui adipisicing laborum\",\n          \"conditionFieldValue\": \"non sed consectetur\"\n        },\n        {\n          \"conditionFieldName\": \"mollit\",\n          \"conditionFieldValue\": \"incididunt qui\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/retentionStartDate",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"retentionStartDate"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "[Out-Of-Scope]Endpoint to handle the soft deletion (blocking) of the transactional data instances",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"dataSubjectID\": \"{{contactId}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"startTime\": \"modifiedAt\",\n  \"maxDeletionDate\": \"2015-06-06T23:59:59\",\n  \"legalGround\": \"ContactMasterData\",\n  \"retentionRules\": [\n    {\n      \"legalEntity\": \"LE\",\n      \"retentionPeriod\": 1,\n      \"retentionUnit\": \"ANN\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"TSApp13_DSR1_LG1_CF1\",\n          \"conditionFieldValue\": \"TSApp13_DSR1_LG1_CFV1\"\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"LE\",\n      \"retentionPeriod\": 1,\n      \"retentionUnit\": \"ANN\",\n      \"conditionSet\": []\n    }\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/deleteLegalGroundInstances",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"deleteLegalGroundInstances"
					]
				},
				"description": "This endpoint has to be implemented by the application to delete (block) the transactional data instances for a given data subject and data subject role.\nIt would be invoked when data subject deletion is triggered from DRM.\nWhen this call is triggered the application has to block the transactional data instances until the maxDeletionDate passed in the payload has been crossed and also persist the maxDeletionDate for each of the transactional data instances.\nIf the maxDeletionDate has been crossed for the transactional data instances then a hard delete can be performed on these records.\n**Note** - \n* This endpoint has to be provided in the service instance configuration under-\nretention-configs => dataSubjects => legalGrounds => dataSubjectLegalGroundDeletionEndPoint\n\n**You can use configure environment feature of API Hub to try out the operations if they have been implemented with the given resource path.**"
			},
			"response": [
				{
					"name": "Deleted successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"exercitation\",\n  \"dataSubjectRole\": \"Ut sunt\",\n  \"dataSubjectID\": \"nulla sunt aliqua exercitation pariatur\",\n  \"startTime\": \"laboris enim commodo tempor\",\n  \"maxDeletionDate\": \"consequat\",\n  \"retentionRules\": [\n    {\n      \"legalEntity\": \"incididunt deserunt Duis tempor\",\n      \"retentionPeriod\": 8730969,\n      \"retentionUnit\": \"ANN\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"pariatur\",\n          \"conditionFieldValue\": \"dolor\"\n        },\n        {\n          \"conditionFieldName\": \"Lorem \",\n          \"conditionFieldValue\": \"id eiusmod sunt quis\"\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"proident ut in\",\n      \"retentionPeriod\": -29597524,\n      \"retentionUnit\": \"MON\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"Excepteur dolore ullamco\",\n          \"conditionFieldValue\": \"deserunt amet\"\n        },\n        {\n          \"conditionFieldName\": \"eu dolore et s\",\n          \"conditionFieldValue\": \"veniam velit ullamco\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteLegalGroundInstances"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "If transactional data instance is not found then respond with 204.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"exercitation\",\n  \"dataSubjectRole\": \"Ut sunt\",\n  \"dataSubjectID\": \"nulla sunt aliqua exercitation pariatur\",\n  \"startTime\": \"laboris enim commodo tempor\",\n  \"maxDeletionDate\": \"consequat\",\n  \"retentionRules\": [\n    {\n      \"legalEntity\": \"incididunt deserunt Duis tempor\",\n      \"retentionPeriod\": 8730969,\n      \"retentionUnit\": \"ANN\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"pariatur\",\n          \"conditionFieldValue\": \"dolor\"\n        },\n        {\n          \"conditionFieldName\": \"Lorem \",\n          \"conditionFieldValue\": \"id eiusmod sunt quis\"\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"proident ut in\",\n      \"retentionPeriod\": -29597524,\n      \"retentionUnit\": \"MON\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"Excepteur dolore ullamco\",\n          \"conditionFieldValue\": \"deserunt amet\"\n        },\n        {\n          \"conditionFieldName\": \"eu dolore et s\",\n          \"conditionFieldValue\": \"veniam velit ullamco\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteLegalGroundInstances"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad request.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"exercitation\",\n  \"dataSubjectRole\": \"Ut sunt\",\n  \"dataSubjectID\": \"nulla sunt aliqua exercitation pariatur\",\n  \"startTime\": \"laboris enim commodo tempor\",\n  \"maxDeletionDate\": \"consequat\",\n  \"retentionRules\": [\n    {\n      \"legalEntity\": \"incididunt deserunt Duis tempor\",\n      \"retentionPeriod\": 8730969,\n      \"retentionUnit\": \"ANN\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"pariatur\",\n          \"conditionFieldValue\": \"dolor\"\n        },\n        {\n          \"conditionFieldName\": \"Lorem \",\n          \"conditionFieldValue\": \"id eiusmod sunt quis\"\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"proident ut in\",\n      \"retentionPeriod\": -29597524,\n      \"retentionUnit\": \"MON\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"Excepteur dolore ullamco\",\n          \"conditionFieldValue\": \"deserunt amet\"\n        },\n        {\n          \"conditionFieldName\": \"eu dolore et s\",\n          \"conditionFieldValue\": \"veniam velit ullamco\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteLegalGroundInstances"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"exercitation\",\n  \"dataSubjectRole\": \"Ut sunt\",\n  \"dataSubjectID\": \"nulla sunt aliqua exercitation pariatur\",\n  \"startTime\": \"laboris enim commodo tempor\",\n  \"maxDeletionDate\": \"consequat\",\n  \"retentionRules\": [\n    {\n      \"legalEntity\": \"incididunt deserunt Duis tempor\",\n      \"retentionPeriod\": 8730969,\n      \"retentionUnit\": \"ANN\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"pariatur\",\n          \"conditionFieldValue\": \"dolor\"\n        },\n        {\n          \"conditionFieldName\": \"Lorem \",\n          \"conditionFieldValue\": \"id eiusmod sunt quis\"\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"proident ut in\",\n      \"retentionPeriod\": -29597524,\n      \"retentionUnit\": \"MON\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"Excepteur dolore ullamco\",\n          \"conditionFieldValue\": \"deserunt amet\"\n        },\n        {\n          \"conditionFieldName\": \"eu dolore et s\",\n          \"conditionFieldValue\": \"veniam velit ullamco\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteLegalGroundInstances"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Insufficient scope",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"exercitation\",\n  \"dataSubjectRole\": \"Ut sunt\",\n  \"dataSubjectID\": \"nulla sunt aliqua exercitation pariatur\",\n  \"startTime\": \"laboris enim commodo tempor\",\n  \"maxDeletionDate\": \"consequat\",\n  \"retentionRules\": [\n    {\n      \"legalEntity\": \"incididunt deserunt Duis tempor\",\n      \"retentionPeriod\": 8730969,\n      \"retentionUnit\": \"ANN\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"pariatur\",\n          \"conditionFieldValue\": \"dolor\"\n        },\n        {\n          \"conditionFieldName\": \"Lorem \",\n          \"conditionFieldValue\": \"id eiusmod sunt quis\"\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"proident ut in\",\n      \"retentionPeriod\": -29597524,\n      \"retentionUnit\": \"MON\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"Excepteur dolore ullamco\",\n          \"conditionFieldValue\": \"deserunt amet\"\n        },\n        {\n          \"conditionFieldName\": \"eu dolore et s\",\n          \"conditionFieldValue\": \"veniam velit ullamco\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteLegalGroundInstances"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Endpoint not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"exercitation\",\n  \"dataSubjectRole\": \"Ut sunt\",\n  \"dataSubjectID\": \"nulla sunt aliqua exercitation pariatur\",\n  \"startTime\": \"laboris enim commodo tempor\",\n  \"maxDeletionDate\": \"consequat\",\n  \"retentionRules\": [\n    {\n      \"legalEntity\": \"incididunt deserunt Duis tempor\",\n      \"retentionPeriod\": 8730969,\n      \"retentionUnit\": \"ANN\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"pariatur\",\n          \"conditionFieldValue\": \"dolor\"\n        },\n        {\n          \"conditionFieldName\": \"Lorem \",\n          \"conditionFieldValue\": \"id eiusmod sunt quis\"\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"proident ut in\",\n      \"retentionPeriod\": -29597524,\n      \"retentionUnit\": \"MON\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"Excepteur dolore ullamco\",\n          \"conditionFieldValue\": \"deserunt amet\"\n        },\n        {\n          \"conditionFieldName\": \"eu dolore et s\",\n          \"conditionFieldValue\": \"veniam velit ullamco\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteLegalGroundInstances"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"exercitation\",\n  \"dataSubjectRole\": \"Ut sunt\",\n  \"dataSubjectID\": \"nulla sunt aliqua exercitation pariatur\",\n  \"startTime\": \"laboris enim commodo tempor\",\n  \"maxDeletionDate\": \"consequat\",\n  \"retentionRules\": [\n    {\n      \"legalEntity\": \"incididunt deserunt Duis tempor\",\n      \"retentionPeriod\": 8730969,\n      \"retentionUnit\": \"ANN\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"pariatur\",\n          \"conditionFieldValue\": \"dolor\"\n        },\n        {\n          \"conditionFieldName\": \"Lorem \",\n          \"conditionFieldValue\": \"id eiusmod sunt quis\"\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"proident ut in\",\n      \"retentionPeriod\": -29597524,\n      \"retentionUnit\": \"MON\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"Excepteur dolore ullamco\",\n          \"conditionFieldValue\": \"deserunt amet\"\n        },\n        {\n          \"conditionFieldName\": \"eu dolore et s\",\n          \"conditionFieldValue\": \"veniam velit ullamco\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteLegalGroundInstances"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Service not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"exercitation\",\n  \"dataSubjectRole\": \"Ut sunt\",\n  \"dataSubjectID\": \"nulla sunt aliqua exercitation pariatur\",\n  \"startTime\": \"laboris enim commodo tempor\",\n  \"maxDeletionDate\": \"consequat\",\n  \"retentionRules\": [\n    {\n      \"legalEntity\": \"incididunt deserunt Duis tempor\",\n      \"retentionPeriod\": 8730969,\n      \"retentionUnit\": \"ANN\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"pariatur\",\n          \"conditionFieldValue\": \"dolor\"\n        },\n        {\n          \"conditionFieldName\": \"Lorem \",\n          \"conditionFieldValue\": \"id eiusmod sunt quis\"\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"proident ut in\",\n      \"retentionPeriod\": -29597524,\n      \"retentionUnit\": \"MON\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"Excepteur dolore ullamco\",\n          \"conditionFieldValue\": \"deserunt amet\"\n        },\n        {\n          \"conditionFieldName\": \"eu dolore et s\",\n          \"conditionFieldValue\": \"veniam velit ullamco\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteLegalGroundInstances"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "[Out-Of-Scope]Endpoint to hard delete (destroy) the blocked transactional data instances",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"legalGround\": \"ContactMasterData\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/destroyLegalGroundInstances",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"destroyLegalGroundInstances"
					]
				},
				"description": "This endpoint has to be implemented by the applications to hard delete all the transactional data instances associated with a given data subject role of the application.\nThis endpoint is invoked by DRM once a week.\nIf the maxDeletionDate persisted for each of the transactional data instances is on or before the current date, this indicates the retention period is crossed for these records so a hard delete can be performed on these records.\n**Note**- \n* This endpoint has to be provided in the service instance configuration under-\nretention-configs => dataSubjects => legalGrounds => dataSubjectsLegalGroundDestroyingEndPoint\n\n**You can use configure environment feature of API Hub to try out the operations if they have been implemented with the given resource path.**"
			},
			"response": [
				{
					"name": "Accepted. Asynchronous process to destroy blocked transactional data instances which have crossed the retention period is triggered successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"ContactMasterData\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/destroyLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"destroyLegalGroundInstances"
							]
						}
					},
					"status": "Accepted",
					"code": 202,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad request.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"ContactMasterData\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/destroyLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"destroyLegalGroundInstances"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"ContactMasterData\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/destroyLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"destroyLegalGroundInstances"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Insufficient scope",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"ContactMasterData\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/destroyLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"destroyLegalGroundInstances"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Endpoint not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"ContactMasterData\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/destroyLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"destroyLegalGroundInstances"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"ContactMasterData\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/destroyLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"destroyLegalGroundInstances"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Service not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"ContactMasterData\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/destroyLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"destroyLegalGroundInstances"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Endpoint to soft delete (block) the data subject of a given application group.",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"dataSubjectID\": \"{{contactId}}\",\n  \"maxDeletionDate\": \"2022-05-08T23:59:59\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/deleteDataSubject",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"deleteDataSubject"
					]
				},
				"description": "This endpoint has to be implemented by the applications to soft delete (block) the data subject that is associated with a given dataSubject role of the application.\nThis endpoint would be invoked when the deletion of the data subject is triggered from DRM only if all the transactional data instances belonging to this data subject id and role have been blocked or destructed.\nWhen the endpoint is invoked-\n* If the maxDeletionDate passed in the payload is on or before the current date  then a hard delete can be performed on the data subject.\n* Otherwise the data subject should be blocked (soft delete) and it's maxDeletionDate should be persisted.\n\n**Note**- \n* This endpoint has to be provided in the service instance configuration under-\nretention-configs => dataSubjects => dataSubjectDeletionEndPoint\n\n**You can use configure environment feature of API Hub to try out the operations if they have been implemented with the given resource path.**"
			},
			"response": [
				{
					"name": "Deleted successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"dataSubjectID\": \"{{contactId}}\",\n  \"maxDeletionDate\": \"2015-06-06T23:59:59\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteDataSubject",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteDataSubject"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad request.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"dataSubjectID\": \"{{contactId}}\",\n  \"maxDeletionDate\": \"2015-06-06T23:59:59\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteDataSubject",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteDataSubject"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"dataSubjectID\": \"{{contactId}}\",\n  \"maxDeletionDate\": \"2015-06-06T23:59:59\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteDataSubject",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteDataSubject"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Insufficient scope",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"dataSubjectID\": \"{{contactId}}\",\n  \"maxDeletionDate\": \"2015-06-06T23:59:59\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteDataSubject",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteDataSubject"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Endpoint not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"dataSubjectID\": \"{{contactId}}\",\n  \"maxDeletionDate\": \"2015-06-06T23:59:59\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteDataSubject",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteDataSubject"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"dataSubjectID\": \"{{contactId}}\",\n  \"maxDeletionDate\": \"2015-06-06T23:59:59\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteDataSubject",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteDataSubject"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Service not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\",\n  \"dataSubjectID\": \"{{contactId}}\",\n  \"maxDeletionDate\": \"2015-06-06T23:59:59\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteDataSubject",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteDataSubject"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Endpoint to hard delete (destroy) the blocked data subjects",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/destroyDataSubjects",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"destroyDataSubjects"
					]
				},
				"description": "This endpoint has to be implemented by the application to hard delete(destroy) all the blocked data subjects belonging to the given dataSubjectRole of the application group.\nThis endpoint is invoked by DRM once a week.\nIf the maxDeletionDate persisted for each of the data subjects associated with the given transactional data and data subject role of the application is on or before the current date then a hard delete can be performed on the data subject.\n**Note**- \n* This endpoint has to be provided in the service instance configuration under-\nretention-configs => dataSubjects => dataSubjectsDestroyingEndPoint\n\n**You can use configure environment feature of API Hub to try out the operations if they have been implemented with the given resource path.**"
			},
			"response": [
				{
					"name": "Accepted. Asynchronous process to destroy blocked data subjects is triggered successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/destroyDataSubjects",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"destroyDataSubjects"
							]
						}
					},
					"status": "Accepted",
					"code": 202,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad request.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/destroyDataSubjects",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"destroyDataSubjects"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/destroyDataSubjects",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"destroyDataSubjects"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Insufficient scope",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/destroyDataSubjects",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"destroyDataSubjects"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Endpoint not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"{{dataSubjectRole}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/destroyDataSubjects",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"destroyDataSubjects"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"Contact\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/destroyDataSubjects",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"destroyDataSubjects"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Service not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"applicationGroupName\": \"{{applicationGroup}}\",\n  \"dataSubjectRole\": \"Contact\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/destroyDataSubjects",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"destroyDataSubjects"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "[Out-Of-Scope]This is the callback endpoint for asynchronous deletion of the transactional data of the application",
			"request": {
				"method": "POST",
				"header": [
					{
						"description": "(Required) The id of the transactional data deletion request whose status has to be updated.",
						"key": "Request-Id",
						"value": "quis magna ipsum"
					},
					{
						"description": "(Required) This id is sent to the application when the deletion of transactional data instances is triggered,\nfor a particular deletion request this id remains the same for all the transactional data of the application group.",
						"key": "requestCall",
						"value": "quis magna ipsum"
					},
					{
						"description": "(Required) This id is sent to the application when the deletion of transactional data instances is triggered. The value of the requestCallId will be different for each of the transactional data of the application group.",
						"key": "requestCallId",
						"value": "quis magna ipsum"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"dataSubjectID\": \"t9\",\n  \"dataSubjectRole\": \"TSApp9_DSR1\",\n  \"startTime\": \"TSApp9_DSR1_LG1_ST1\",\n  \"maxDeletionDate\": \"2015-06-06T23:59:59\",\n  \"legalGround\": \"TSApp9_DSR1_LG1\",\n  \"retentionRules\": [\n    {\n      \"legalEntity\": \"LE\",\n      \"retentionPeriod\": 1,\n      \"retentionUnit\": \"ANN\",\n      \"conditionSet\": []\n    }\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/AsyncdeleteLegalGroundInstances",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"AsyncdeleteLegalGroundInstances"
					]
				},
				"description": "This endpoint has to be implemented by the application to delete (block) the transactional data instances for a given data subject and data subject role.\nThe endpoint has to be implemented only by those applications which have the value of \"asynchronousCallback\" property set as true.\nIt would be invoked when data subject deletion is triggered from DRM.\nWhen this call is triggered the application has to block the transactional data instances until the maxDeletionDate passed in the payload has been crossed and also persist the maxDeletionDate for each of the transactional data instances.\nIf the maxDeletionDate has been crossed for the transactional data instances then a hard delete can be performed on these records.\nOnce the deletion (blocking) of transactional data is complete this endpoint will call DRM's call back endpoint \"/appl/cb/legal-ground-deletion\" in order to update the deletion status with the following payload-\n\n    {\n    requestCall: string\n    requestCallId: string\n    requestCallResponseStatusCode: integer\n    requestCallResponseMessage: string\n    requestType: string\n    applicationGroupName: string\n    dataSubjectRoleName: string\n    legalGroundName: string\n    }\n    \n* The requestCall and requestCallId are the same as the ones sent in the header\n\n* requestCallResponseStatusCode-\n  \n  200 - success\n  \n  400 - bad request\n  \n  204 - no transactional data instances found\n  \n* requestCallResponseMessage - message indicating the status of transactional data deletion\n  \n* requestType - legal-ground-deletion\n   \n\n**Note**- \n* This endpoint has to be provided in the service instance configuration under-\n  retention-configs => dataSubjects => legalGrounds => dataSubjectLegalGroundDeletionEndPoint\n  \n**You can use configure environment feature of API Hub to try out the operations if they have been implemented with the given resource path.**"
			},
			"response": [
				{
					"name": "Transactional data deletion is initiated and the response to update the status of this deletion request has been set to \"/appl/cb/legal-ground-deletion\" endpoint",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) The id of the transactional data deletion request whose status has to be updated.",
								"key": "Request-Id",
								"value": "quis magna ipsum"
							},
							{
								"description": "(Required) This id is sent to the application when the deletion of transactional data instances is triggered,\nfor a particular deletion request this id remains the same for all the transactional data of the application group.",
								"key": "requestCall",
								"value": "quis magna ipsum"
							},
							{
								"description": "(Required) This id is sent to the application when the deletion of transactional data instances is triggered. The value of the requestCallId will be different for each of the transactional data of the application group.",
								"key": "requestCallId",
								"value": "quis magna ipsum"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"in cupidatat sit nulla\",\n  \"dataSubjectRole\": \"ut in Excepteur\",\n  \"dataSubjectID\": \"eiusmod in voluptate\",\n  \"startTime\": \"adipisicing cupidatat\",\n  \"maxDeletionDate\": \"veniam aliqua nostrud\",\n  \"retentionRules\": [\n    {\n      \"legalEntity\": \"eiusmod\",\n      \"retentionPeriod\": 8757903,\n      \"retentionUnit\": \"MON\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"cillum exercitation ea\",\n          \"conditionFieldValue\": \"eiusmod enim\"\n        },\n        {\n          \"conditionFieldName\": \"Lorem officia\",\n          \"conditionFieldValue\": \"aute Duis\"\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"quis eiusmod Lorem\",\n      \"retentionPeriod\": -17429123,\n      \"retentionUnit\": \"ANN\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"consectetur nulla veniam\",\n          \"conditionFieldValue\": \"ut in exercitation elit\"\n        },\n        {\n          \"conditionFieldName\": \"culpa ut cillum en\",\n          \"conditionFieldValue\": \"consequat commodo Ut exercitation laborum\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/AsyncdeleteLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"AsyncdeleteLegalGroundInstances"
							]
						}
					},
					"status": "Accepted",
					"code": 202,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Transactional data instance not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) The id of the transactional data deletion request whose status has to be updated.",
								"key": "Request-Id",
								"value": "quis magna ipsum"
							},
							{
								"description": "(Required) This id is sent to the application when the deletion of transactional data instances is triggered,\nfor a particular deletion request this id remains the same for all the transactional data of the application group.",
								"key": "requestCall",
								"value": "quis magna ipsum"
							},
							{
								"description": "(Required) This id is sent to the application when the deletion of transactional data instances is triggered. The value of the requestCallId will be different for each of the transactional data of the application group.",
								"key": "requestCallId",
								"value": "quis magna ipsum"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"in cupidatat sit nulla\",\n  \"dataSubjectRole\": \"ut in Excepteur\",\n  \"dataSubjectID\": \"eiusmod in voluptate\",\n  \"startTime\": \"adipisicing cupidatat\",\n  \"maxDeletionDate\": \"veniam aliqua nostrud\",\n  \"retentionRules\": [\n    {\n      \"legalEntity\": \"eiusmod\",\n      \"retentionPeriod\": 8757903,\n      \"retentionUnit\": \"MON\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"cillum exercitation ea\",\n          \"conditionFieldValue\": \"eiusmod enim\"\n        },\n        {\n          \"conditionFieldName\": \"Lorem officia\",\n          \"conditionFieldValue\": \"aute Duis\"\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"quis eiusmod Lorem\",\n      \"retentionPeriod\": -17429123,\n      \"retentionUnit\": \"ANN\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"consectetur nulla veniam\",\n          \"conditionFieldValue\": \"ut in exercitation elit\"\n        },\n        {\n          \"conditionFieldName\": \"culpa ut cillum en\",\n          \"conditionFieldValue\": \"consequat commodo Ut exercitation laborum\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/AsyncdeleteLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"AsyncdeleteLegalGroundInstances"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) The id of the transactional data deletion request whose status has to be updated.",
								"key": "Request-Id",
								"value": "quis magna ipsum"
							},
							{
								"description": "(Required) This id is sent to the application when the deletion of transactional data instances is triggered,\nfor a particular deletion request this id remains the same for all the transactional data of the application group.",
								"key": "requestCall",
								"value": "quis magna ipsum"
							},
							{
								"description": "(Required) This id is sent to the application when the deletion of transactional data instances is triggered. The value of the requestCallId will be different for each of the transactional data of the application group.",
								"key": "requestCallId",
								"value": "quis magna ipsum"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"in cupidatat sit nulla\",\n  \"dataSubjectRole\": \"ut in Excepteur\",\n  \"dataSubjectID\": \"eiusmod in voluptate\",\n  \"startTime\": \"adipisicing cupidatat\",\n  \"maxDeletionDate\": \"veniam aliqua nostrud\",\n  \"retentionRules\": [\n    {\n      \"legalEntity\": \"eiusmod\",\n      \"retentionPeriod\": 8757903,\n      \"retentionUnit\": \"MON\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"cillum exercitation ea\",\n          \"conditionFieldValue\": \"eiusmod enim\"\n        },\n        {\n          \"conditionFieldName\": \"Lorem officia\",\n          \"conditionFieldValue\": \"aute Duis\"\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"quis eiusmod Lorem\",\n      \"retentionPeriod\": -17429123,\n      \"retentionUnit\": \"ANN\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"consectetur nulla veniam\",\n          \"conditionFieldValue\": \"ut in exercitation elit\"\n        },\n        {\n          \"conditionFieldName\": \"culpa ut cillum en\",\n          \"conditionFieldValue\": \"consequat commodo Ut exercitation laborum\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/AsyncdeleteLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"AsyncdeleteLegalGroundInstances"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Insufficient scope",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) The id of the transactional data deletion request whose status has to be updated.",
								"key": "Request-Id",
								"value": "quis magna ipsum"
							},
							{
								"description": "(Required) This id is sent to the application when the deletion of transactional data instances is triggered,\nfor a particular deletion request this id remains the same for all the transactional data of the application group.",
								"key": "requestCall",
								"value": "quis magna ipsum"
							},
							{
								"description": "(Required) This id is sent to the application when the deletion of transactional data instances is triggered. The value of the requestCallId will be different for each of the transactional data of the application group.",
								"key": "requestCallId",
								"value": "quis magna ipsum"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"in cupidatat sit nulla\",\n  \"dataSubjectRole\": \"ut in Excepteur\",\n  \"dataSubjectID\": \"eiusmod in voluptate\",\n  \"startTime\": \"adipisicing cupidatat\",\n  \"maxDeletionDate\": \"veniam aliqua nostrud\",\n  \"retentionRules\": [\n    {\n      \"legalEntity\": \"eiusmod\",\n      \"retentionPeriod\": 8757903,\n      \"retentionUnit\": \"MON\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"cillum exercitation ea\",\n          \"conditionFieldValue\": \"eiusmod enim\"\n        },\n        {\n          \"conditionFieldName\": \"Lorem officia\",\n          \"conditionFieldValue\": \"aute Duis\"\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"quis eiusmod Lorem\",\n      \"retentionPeriod\": -17429123,\n      \"retentionUnit\": \"ANN\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"consectetur nulla veniam\",\n          \"conditionFieldValue\": \"ut in exercitation elit\"\n        },\n        {\n          \"conditionFieldName\": \"culpa ut cillum en\",\n          \"conditionFieldValue\": \"consequat commodo Ut exercitation laborum\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/AsyncdeleteLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"AsyncdeleteLegalGroundInstances"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Endpoint not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) The id of the transactional data deletion request whose status has to be updated.",
								"key": "Request-Id",
								"value": "quis magna ipsum"
							},
							{
								"description": "(Required) This id is sent to the application when the deletion of transactional data instances is triggered,\nfor a particular deletion request this id remains the same for all the transactional data of the application group.",
								"key": "requestCall",
								"value": "quis magna ipsum"
							},
							{
								"description": "(Required) This id is sent to the application when the deletion of transactional data instances is triggered. The value of the requestCallId will be different for each of the transactional data of the application group.",
								"key": "requestCallId",
								"value": "quis magna ipsum"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"in cupidatat sit nulla\",\n  \"dataSubjectRole\": \"ut in Excepteur\",\n  \"dataSubjectID\": \"eiusmod in voluptate\",\n  \"startTime\": \"adipisicing cupidatat\",\n  \"maxDeletionDate\": \"veniam aliqua nostrud\",\n  \"retentionRules\": [\n    {\n      \"legalEntity\": \"eiusmod\",\n      \"retentionPeriod\": 8757903,\n      \"retentionUnit\": \"MON\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"cillum exercitation ea\",\n          \"conditionFieldValue\": \"eiusmod enim\"\n        },\n        {\n          \"conditionFieldName\": \"Lorem officia\",\n          \"conditionFieldValue\": \"aute Duis\"\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"quis eiusmod Lorem\",\n      \"retentionPeriod\": -17429123,\n      \"retentionUnit\": \"ANN\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"consectetur nulla veniam\",\n          \"conditionFieldValue\": \"ut in exercitation elit\"\n        },\n        {\n          \"conditionFieldName\": \"culpa ut cillum en\",\n          \"conditionFieldValue\": \"consequat commodo Ut exercitation laborum\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/AsyncdeleteLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"AsyncdeleteLegalGroundInstances"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Service not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) The id of the transactional data deletion request whose status has to be updated.",
								"key": "Request-Id",
								"value": "quis magna ipsum"
							},
							{
								"description": "(Required) This id is sent to the application when the deletion of transactional data instances is triggered,\nfor a particular deletion request this id remains the same for all the transactional data of the application group.",
								"key": "requestCall",
								"value": "quis magna ipsum"
							},
							{
								"description": "(Required) This id is sent to the application when the deletion of transactional data instances is triggered. The value of the requestCallId will be different for each of the transactional data of the application group.",
								"key": "requestCallId",
								"value": "quis magna ipsum"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"legalGround\": \"in cupidatat sit nulla\",\n  \"dataSubjectRole\": \"ut in Excepteur\",\n  \"dataSubjectID\": \"eiusmod in voluptate\",\n  \"startTime\": \"adipisicing cupidatat\",\n  \"maxDeletionDate\": \"veniam aliqua nostrud\",\n  \"retentionRules\": [\n    {\n      \"legalEntity\": \"eiusmod\",\n      \"retentionPeriod\": 8757903,\n      \"retentionUnit\": \"MON\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"cillum exercitation ea\",\n          \"conditionFieldValue\": \"eiusmod enim\"\n        },\n        {\n          \"conditionFieldName\": \"Lorem officia\",\n          \"conditionFieldValue\": \"aute Duis\"\n        }\n      ]\n    },\n    {\n      \"legalEntity\": \"quis eiusmod Lorem\",\n      \"retentionPeriod\": -17429123,\n      \"retentionUnit\": \"ANN\",\n      \"conditionSet\": [\n        {\n          \"conditionFieldName\": \"consectetur nulla veniam\",\n          \"conditionFieldValue\": \"ut in exercitation elit\"\n        },\n        {\n          \"conditionFieldName\": \"culpa ut cillum en\",\n          \"conditionFieldValue\": \"consequat commodo Ut exercitation laborum\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/AsyncdeleteLegalGroundInstances",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"AsyncdeleteLegalGroundInstances"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "[Out-Of-Scope]This is the callback endpoint for asynchronous data subject deletion",
			"request": {
				"method": "POST",
				"header": [
					{
						"description": "The id of the data subject deletion request whose status has to be updated, same as the request id sent in the payload.",
						"key": "Request-Id",
						"value": "quis magna ipsum"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"requestId\": \"9cfff2a2-0547-48b1-8e26-8a3159b499f6\",\n  \"status\": 2,\n  \"message\": \"{\\\"status\\\":2,\\\"deletionDate\\\":\\\"2015-06-06T23:59:59\\\"}\",\n  \"requestType\": \"RM_DATA_SUBJECT_DELETION\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/asyncCallback",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"asyncCallback"
					]
				},
				"description": "This endpoint has to be implemented by the application to update the status of asynchronous deletion of the data subject.\nIt has to be implemented only by those applications which have the value of \"asynchronousCallback\" property set as true.\nThe endpoint would be invoked by DRM to check the status of deletion of data subject after all the api calls relevant for data subject deletion have been trigered.\n**Note**- \n* This endpoint has to be provided in the service instance configuration under-\nretention-configs => asynchronousCallbackEndPoint\n\n**You can use configure environment feature of API Hub to try out the operations if they have been implemented with the given resource path.**"
			},
			"response": [
				{
					"name": "Status of data subject deletion request has been updated successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "The id of the data subject deletion request whose status has to be updated, same as the request id sent in the payload.",
								"key": "Request-Id",
								"value": "quis magna ipsum"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"requestId\": \"9cfff2a2-0547-48b1-8e26-8a3159b499f6\",\n  \"status\": 2,\n  \"message\": \"{\\\"status\\\":2,\\\"deletionDate\\\":\\\"2015-06-06T23:59:59\\\"}\",\n  \"requestType\": \"RM_DATA_SUBJECT_DELETION\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/asyncCallback",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"asyncCallback"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad request.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "The id of the data subject deletion request whose status has to be updated, same as the request id sent in the payload.",
								"key": "Request-Id",
								"value": "quis magna ipsum"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"requestId\": \"9cfff2a2-0547-48b1-8e26-8a3159b499f6\",\n  \"status\": 2,\n  \"message\": \"{\\\"status\\\":2,\\\"deletionDate\\\":\\\"2015-06-06T23:59:59\\\"}\",\n  \"requestType\": \"RM_DATA_SUBJECT_DELETION\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/asyncCallback",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"asyncCallback"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "The id of the data subject deletion request whose status has to be updated, same as the request id sent in the payload.",
								"key": "Request-Id",
								"value": "quis magna ipsum"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"requestId\": \"9cfff2a2-0547-48b1-8e26-8a3159b499f6\",\n  \"status\": 2,\n  \"message\": \"{\\\"status\\\":2,\\\"deletionDate\\\":\\\"2015-06-06T23:59:59\\\"}\",\n  \"requestType\": \"RM_DATA_SUBJECT_DELETION\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/asyncCallback",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"asyncCallback"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Insufficient scope",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "The id of the data subject deletion request whose status has to be updated, same as the request id sent in the payload.",
								"key": "Request-Id",
								"value": "quis magna ipsum"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"requestId\": \"9cfff2a2-0547-48b1-8e26-8a3159b499f6\",\n  \"status\": 2,\n  \"message\": \"{\\\"status\\\":2,\\\"deletionDate\\\":\\\"2015-06-06T23:59:59\\\"}\",\n  \"requestType\": \"RM_DATA_SUBJECT_DELETION\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/asyncCallback",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"asyncCallback"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Endpoint not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "The id of the data subject deletion request whose status has to be updated, same as the request id sent in the payload.",
								"key": "Request-Id",
								"value": "quis magna ipsum"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"requestId\": \"9cfff2a2-0547-48b1-8e26-8a3159b499f6\",\n  \"status\": 2,\n  \"message\": \"{\\\"status\\\":2,\\\"deletionDate\\\":\\\"2015-06-06T23:59:59\\\"}\",\n  \"requestType\": \"RM_DATA_SUBJECT_DELETION\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/asyncCallback",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"asyncCallback"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "The id of the data subject deletion request whose status has to be updated, same as the request id sent in the payload.",
								"key": "Request-Id",
								"value": "quis magna ipsum"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"requestId\": \"9cfff2a2-0547-48b1-8e26-8a3159b499f6\",\n  \"status\": 2,\n  \"message\": \"{\\\"status\\\":2,\\\"deletionDate\\\":\\\"2015-06-06T23:59:59\\\"}\",\n  \"requestType\": \"RM_DATA_SUBJECT_DELETION\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/asyncCallback",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"asyncCallback"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Service not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "The id of the data subject deletion request whose status has to be updated, same as the request id sent in the payload.",
								"key": "Request-Id",
								"value": "quis magna ipsum"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"requestId\": \"9cfff2a2-0547-48b1-8e26-8a3159b499f6\",\n  \"status\": 2,\n  \"message\": \"{\\\"status\\\":2,\\\"deletionDate\\\":\\\"2015-06-06T23:59:59\\\"}\",\n  \"requestType\": \"RM_DATA_SUBJECT_DELETION\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/asyncCallback",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"asyncCallback"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "[Out-Of-Scope]This is the callback endpoint to be implemented by the master data service applications that reuse another master data application.",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"applicationGroup\": \"v\",\n    \"dataSubjectRole\": \"consequat ut adipisicing proident se\",\n    \"dataSubjectId\": \"Excepteur est\",\n    \"deletionDate\": \"dolore veniam est\",\n    \"retentionStartDate\": \"eu dolore qui amet est\",\n    \"purposeStatus\": 0\n  },\n  {\n    \"applicationGroup\": \"in \",\n    \"dataSubjectRole\": \"Duis in do\",\n    \"dataSubjectId\": \"cupidatat pariatur sint culpa\",\n    \"deletionDate\": \"aliquip adipisicing sit veniam\",\n    \"retentionStartDate\": \"id\",\n    \"purposeStatus\": 0\n  }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/deleteDataSubjectMaster",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"deleteDataSubjectMaster"
					]
				},
				"description": "This callback endpoint has to be implemented by the application to block/delete the data subject that is associated with a given dataSubject role of the master data application.\n\nWhen the deletion of the given data subject is triggered from DRM -\n\n* The \"/sap/drm/v2/mds/dataSubjectDeletion\" endpoint would be invoked to check if all the transactional data associated with the data subject across the  application groups that make use of this master data have crossed their residence period.\n\n* Once the above check is complete the \"/sap/drm/v2/mds/dataSubjectDeletion\" endpoint will invoke this callback endpoint-\n   - If the data subject has reached the end of purpose across all the  application groups that use this master data then the \"purposeStatus\" value passed in the payoad would be 0, if the end of purpose is not reached the value would be 1.\n   \n* When this callback endpoint is invoked with the \"purposeStatus\" value as 0 in the payload\n\n  - If the \"deletionDate\" passed in the payload is on or before the current date  then a hard delete can be performed on the data subject, else the data subject should be blocked (soft delete) and it's \"deletionDate\" should be persisted if it is not already saved.\n\n* When this callback endpoint is invoked with the \"purposeStatus\" value as 1 in the payload\n\n  - Then the data subject should not be blocked or deleted\n\n**Note**- \n* This endpoint has to be provided in the service instance configuration under-\nretention-configs => dataSubjects => dataSubjectDeletionEndPoint\n\n**You can use configure environment feature of API Hub to try out the operations if they have been implemented with the given resource path.**"
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"applicationGroup\": \"ea irure cillum in consectetur\",\n    \"dataSubjectRole\": \"vol\",\n    \"dataSubjectId\": \"anim laborum ullamco irure veniam\",\n    \"deletionDate\": \"ex amet\",\n    \"retentionStartDate\": \"nulla incididunt est ad\",\n    \"purposeStatus\": 0\n  },\n  {\n    \"applicationGroup\": \"eu quis exercitation culpa\",\n    \"dataSubjectRole\": \"aute aliquip voluptate\",\n    \"dataSubjectId\": \"occaecat\",\n    \"deletionDate\": \"officia dolore\",\n    \"retentionStartDate\": \"dolore in sit exercitation\",\n    \"purposeStatus\": 0\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteDataSubjectMaster",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteDataSubjectMaster"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad request.",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"applicationGroup\": \"ea irure cillum in consectetur\",\n    \"dataSubjectRole\": \"vol\",\n    \"dataSubjectId\": \"anim laborum ullamco irure veniam\",\n    \"deletionDate\": \"ex amet\",\n    \"retentionStartDate\": \"nulla incididunt est ad\",\n    \"purposeStatus\": 0\n  },\n  {\n    \"applicationGroup\": \"eu quis exercitation culpa\",\n    \"dataSubjectRole\": \"aute aliquip voluptate\",\n    \"dataSubjectId\": \"occaecat\",\n    \"deletionDate\": \"officia dolore\",\n    \"retentionStartDate\": \"dolore in sit exercitation\",\n    \"purposeStatus\": 0\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteDataSubjectMaster",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteDataSubjectMaster"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"applicationGroup\": \"ea irure cillum in consectetur\",\n    \"dataSubjectRole\": \"vol\",\n    \"dataSubjectId\": \"anim laborum ullamco irure veniam\",\n    \"deletionDate\": \"ex amet\",\n    \"retentionStartDate\": \"nulla incididunt est ad\",\n    \"purposeStatus\": 0\n  },\n  {\n    \"applicationGroup\": \"eu quis exercitation culpa\",\n    \"dataSubjectRole\": \"aute aliquip voluptate\",\n    \"dataSubjectId\": \"occaecat\",\n    \"deletionDate\": \"officia dolore\",\n    \"retentionStartDate\": \"dolore in sit exercitation\",\n    \"purposeStatus\": 0\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteDataSubjectMaster",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteDataSubjectMaster"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Insufficient scope",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"applicationGroup\": \"ea irure cillum in consectetur\",\n    \"dataSubjectRole\": \"vol\",\n    \"dataSubjectId\": \"anim laborum ullamco irure veniam\",\n    \"deletionDate\": \"ex amet\",\n    \"retentionStartDate\": \"nulla incididunt est ad\",\n    \"purposeStatus\": 0\n  },\n  {\n    \"applicationGroup\": \"eu quis exercitation culpa\",\n    \"dataSubjectRole\": \"aute aliquip voluptate\",\n    \"dataSubjectId\": \"occaecat\",\n    \"deletionDate\": \"officia dolore\",\n    \"retentionStartDate\": \"dolore in sit exercitation\",\n    \"purposeStatus\": 0\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteDataSubjectMaster",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteDataSubjectMaster"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Endpoint not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"applicationGroup\": \"ea irure cillum in consectetur\",\n    \"dataSubjectRole\": \"vol\",\n    \"dataSubjectId\": \"anim laborum ullamco irure veniam\",\n    \"deletionDate\": \"ex amet\",\n    \"retentionStartDate\": \"nulla incididunt est ad\",\n    \"purposeStatus\": 0\n  },\n  {\n    \"applicationGroup\": \"eu quis exercitation culpa\",\n    \"dataSubjectRole\": \"aute aliquip voluptate\",\n    \"dataSubjectId\": \"occaecat\",\n    \"deletionDate\": \"officia dolore\",\n    \"retentionStartDate\": \"dolore in sit exercitation\",\n    \"purposeStatus\": 0\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteDataSubjectMaster",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteDataSubjectMaster"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"applicationGroup\": \"ea irure cillum in consectetur\",\n    \"dataSubjectRole\": \"vol\",\n    \"dataSubjectId\": \"anim laborum ullamco irure veniam\",\n    \"deletionDate\": \"ex amet\",\n    \"retentionStartDate\": \"nulla incididunt est ad\",\n    \"purposeStatus\": 0\n  },\n  {\n    \"applicationGroup\": \"eu quis exercitation culpa\",\n    \"dataSubjectRole\": \"aute aliquip voluptate\",\n    \"dataSubjectId\": \"occaecat\",\n    \"deletionDate\": \"officia dolore\",\n    \"retentionStartDate\": \"dolore in sit exercitation\",\n    \"purposeStatus\": 0\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteDataSubjectMaster",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteDataSubjectMaster"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Service not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"applicationGroup\": \"ea irure cillum in consectetur\",\n    \"dataSubjectRole\": \"vol\",\n    \"dataSubjectId\": \"anim laborum ullamco irure veniam\",\n    \"deletionDate\": \"ex amet\",\n    \"retentionStartDate\": \"nulla incididunt est ad\",\n    \"purposeStatus\": 0\n  },\n  {\n    \"applicationGroup\": \"eu quis exercitation culpa\",\n    \"dataSubjectRole\": \"aute aliquip voluptate\",\n    \"dataSubjectId\": \"occaecat\",\n    \"deletionDate\": \"officia dolore\",\n    \"retentionStartDate\": \"dolore in sit exercitation\",\n    \"purposeStatus\": 0\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/deleteDataSubjectMaster",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"deleteDataSubjectMaster"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Endpoint to return the list of legal entities associated with the given data subject role.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"dataSubjectLegalEntities = LE\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].value).to.eql(\"LE\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept-Language",
						"value": "quis magna ipsum"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseURL}}/legalEntities/:dataSubjectRole",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"legalEntities",
						":dataSubjectRole"
					],
					"variable": [
						{
							"key": "dataSubjectRole",
							"value": "quis magna ipsum",
							"description": "(Required) List of Legal Entities is returned associated with this Data Subject Role parameter."
						}
					]
				},
				"description": "This api has to be implemented by the application to return the list of legal entities for a particular data subject role.\nThe endpoint is invoked by DRM to display the legal entities in the value help during business purpose creation.\n**Note** - \n* The above endpoint has to be provided in the service instance configuration under-\nretention-configs => dataSubjects => legalEntity => legalEntityValueHelpEndPoint\n\n**You can use configure environment feature of API Hub to try out the operations if they have been implemented with the given resource path.**"
			},
			"response": [
				{
					"name": "returns list of legal entities with description",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"key": "Accept-Language",
								"value": "quis magna ipsum"
							}
						],
						"url": {
							"raw": "{{baseURL}}/legalEntities/:dataSubjectRole",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"legalEntities",
								":dataSubjectRole"
							],
							"variable": [
								{
									"key": "dataSubjectRole",
									"value": "quis magna ipsum",
									"description": "(Required) List of Legal Entities is returned associated with this Data Subject Role parameter."
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"value\": \"LE\",\n    \"valueDesc\": \"Legal Entity LE\"\n  }\n]"
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"key": "Accept-Language",
								"value": "quis magna ipsum"
							}
						],
						"url": {
							"raw": "{{baseURL}}/legalEntities/:dataSubjectRole",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"legalEntities",
								":dataSubjectRole"
							],
							"variable": [
								{
									"key": "dataSubjectRole",
									"value": "quis magna ipsum",
									"description": "(Required) List of Legal Entities is returned associated with this Data Subject Role parameter."
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Insufficient scope",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"key": "Accept-Language",
								"value": "quis magna ipsum"
							}
						],
						"url": {
							"raw": "{{baseURL}}/legalEntities/:dataSubjectRole",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"legalEntities",
								":dataSubjectRole"
							],
							"variable": [
								{
									"key": "dataSubjectRole",
									"value": "quis magna ipsum",
									"description": "(Required) List of Legal Entities is returned associated with this Data Subject Role parameter."
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Endpoint not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"key": "Accept-Language",
								"value": "quis magna ipsum"
							}
						],
						"url": {
							"raw": "{{baseURL}}/legalEntities/:dataSubjectRole",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"legalEntities",
								":dataSubjectRole"
							],
							"variable": [
								{
									"key": "dataSubjectRole",
									"value": "quis magna ipsum",
									"description": "(Required) List of Legal Entities is returned associated with this Data Subject Role parameter."
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"key": "Accept-Language",
								"value": "quis magna ipsum"
							}
						],
						"url": {
							"raw": "{{baseURL}}/legalEntities/:dataSubjectRole",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"legalEntities",
								":dataSubjectRole"
							],
							"variable": [
								{
									"key": "dataSubjectRole",
									"value": "quis magna ipsum",
									"description": "(Required) List of Legal Entities is returned associated with this Data Subject Role parameter."
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Service not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"key": "Accept-Language",
								"value": "quis magna ipsum"
							}
						],
						"url": {
							"raw": "{{baseURL}}/legalEntities/:dataSubjectRole",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"legalEntities",
								":dataSubjectRole"
							],
							"variable": [
								{
									"key": "dataSubjectRole",
									"value": "quis magna ipsum",
									"description": "(Required) List of Legal Entities is returned associated with this Data Subject Role parameter."
								}
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "[Out-Of-Scope]Endpoint to return the conditional field values for a transactional data",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept-Language",
						"value": "quis magna ipsum"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseURL}}/conditionFieldValues",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"conditionFieldValues"
					]
				},
				"description": "This endpoint has to be implemented by the application only if any conditional fields are associated with the transactional data.\nDRM will invoke this endpoint to load the condional field value help when rules are created for the transactional data.\nThe endpoint should return the value and description of the conditional field.\n**Note**- \n* This endpoint should be provided in the service instance configuration under-\nretention-configs => dataSubjects => legalGrounds => conditions => conditionFieldValueHelpEndPoint\n\n**You can use configure environment feature of API Hub to try out the operations if they have been implemented with the given resource path.**"
			},
			"response": [
				{
					"name": "returns list of condtional field value with its description",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"key": "Accept-Language",
								"value": "quis magna ipsum"
							}
						],
						"url": {
							"raw": "{{baseURL}}/conditionFieldValues",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"conditionFieldValues"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"value\": \"TSApp13_DSR1_LG1_CFV1\",\n    \"valueDesc\": \"Prime Order\"\n  },\n  {\n    \"value\": \"TSApp13_DSR1_LG3_CFV1\",\n    \"valueDesc\": \"By Train\"\n  }\n]"
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"key": "Accept-Language",
								"value": "quis magna ipsum"
							}
						],
						"url": {
							"raw": "{{baseURL}}/conditionFieldValues",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"conditionFieldValues"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Insufficient scope",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"key": "Accept-Language",
								"value": "quis magna ipsum"
							}
						],
						"url": {
							"raw": "{{baseURL}}/conditionFieldValues",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"conditionFieldValues"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Endpoint not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"key": "Accept-Language",
								"value": "quis magna ipsum"
							}
						],
						"url": {
							"raw": "{{baseURL}}/conditionFieldValues",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"conditionFieldValues"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"key": "Accept-Language",
								"value": "quis magna ipsum"
							}
						],
						"url": {
							"raw": "{{baseURL}}/conditionFieldValues",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"conditionFieldValues"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Service not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"key": "Accept-Language",
								"value": "quis magna ipsum"
							}
						],
						"url": {
							"raw": "{{baseURL}}/conditionFieldValues",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"conditionFieldValues"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "[Out-Of-Scope]Endpoint to fetch the discovered transactional data for a given data subject role of the application group.",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "{{baseURL}}/legalGrounds",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"legalGrounds"
					]
				},
				"description": "This endpoint has to be implemented by the application only if it has any transactional data that is not provided in the service instance configuration and will have to be fetched dynamically.\nThe enpoint in invoked by DRM to load the transactional data associated a particular data subject role of the application during creation of business purpose rules.\nThe endpoint should return all the discovered transactional data associated with the particular data subject role of the application group\n\n**Note**- This endpoint has to be provided in the service instance configuration under-\n\n* retention-configs => dataSubjects => legalGroundDiscoveryEndPoint - for non archive only applications\n* retention-configs => legalGroundDiscoveryEndPoint - for archive only application groups\n\n**You can use configure environment feature of API Hub to try out the operations if they have been implemented with the given resource path.**"
			},
			"response": [
				{
					"name": "returns the details of the discoverd transactional data for the data subject role of the application group",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/legalGrounds",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"legalGrounds"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "*/*"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/legalGrounds",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"legalGrounds"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Insufficient scope",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/legalGrounds",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"legalGrounds"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Endpoint not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/legalGrounds",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"legalGrounds"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/legalGrounds",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"legalGrounds"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Service not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseURL}}/legalGrounds",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"legalGrounds"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "1234",
				"type": "string"
			},
			{
				"key": "username",
				"value": "admin",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://{{hostname}}.{{domain}}/{{suffix}}",
			"type": "string"
		},
		{
			"key": "legalEntity",
			"value": "LE",
			"type": "string"
		},
		{
			"key": "legalGround",
			"value": "ContactInMasterdataManagement",
			"type": "string"
		},
		{
			"key": "applicationGroup",
			"value": "CGT_TMP",
			"type": "string"
		},
		{
			"key": "dataSubjectRole",
			"value": "Contact",
			"type": "string"
		},
		{
			"key": "startTime",
			"value": "modifiedAt",
			"type": "string"
		},
		{
			"key": "contactId",
			"value": "ElonMusk",
			"type": "string"
		}
	]
}
